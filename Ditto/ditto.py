#function1. Generate Pokémon
def generate_pokemon(names, powers):
    """ use dictionary to randomly generate the information of pokemon """
    list = {'name':random.choice(names), 'power':random.choice(powers), 'level':random.randint(1,10)}
    return list

#function2. Get Ditto's level
def get_level(ditto):
    """ calculate the current level of ditto """
    sum_level = sum(ditto['level']) #use sum to easily get the total_current of ditto
    current_level = float(sum_level)/ float((ditto['count'] + 1)) #according to the instructions of the question
    return current_level

#function3. Should Ditto absorb that Pokémon?
def should_absorb(ditto, pokemon):
    """ compare the current_level and future_level """
    current_level = get_level(ditto) #get the current_level from get_level(ditto)
    sum_level2 = sum(ditto['level']) + pokemon['level'] #sum of current_level
    future_level = float(sum_level2) / float (ditto['count'] + 2) #average of the current_level
    if future_level > current_level: #make comparasion
        return True
    else:
        return False

#function4. Absorb Pokémon
def absorb(ditto, pokemon):
    """ use append to absorb new pokemon """
    ditto['level'].append(pokemon['level'])
    ditto['count'] += 1 #the count should increase one unit
    ditto['power'].append(pokemon['power'])

#function5, Take a walk
def take_walk(pokemon_list):
    """ create the initial ditto and then according to different situations
        to decide whether or not to absorb the new pokemon
    """
    ditto = {'power':['absorb'], 'count':0, 'level':[1]} #Ditto's initial dictionary
    for index in range(len(pokemon_list)): #start to loop every pokemon the pokemon_list generates
        if should_absorb(ditto,pokemon_list[index]) == True: #if the new pokemon increase the ability of ditto
          absorb(ditto, pokemon_list[index])
        elif pokemon_list[index]['power'] not in ditto['power']: #if ditto does not have the power generated by the new pokemon
          absorb(ditto, pokemon_list[index])
    return ditto
